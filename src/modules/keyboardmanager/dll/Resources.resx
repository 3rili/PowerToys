<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Settings_Description" xml:space="preserve">
    <value>This feature requires Windows 10 version 1903 or higher</value>
  </data>
  <data name="Keyboardmanager" xml:space="preserve">
    <value>Keyboard Manager</value>
  </data>
  <data name="Createwindowfailed_Errormessage" xml:space="preserve">
    <value>Call to CreateWindow failed!</value>
  </data>
  <data name="Createwindowfailed_Errortitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Registerclassfailed_Errormessage" xml:space="preserve">
    <value>Windows registration failed!</value>
  </data>
  <data name="Registerclassfailed_Errortitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Editkeyboard_Windowname" xml:space="preserve">
    <value>Remap keys</value>
  </data>
  <data name="Editshortcuts_Windowname" xml:space="preserve">
    <value>Remap shortcuts</value>
  </data>
  <data name="Ok_Button" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel_Button" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Continue_Button" xml:space="preserve">
    <value>Continue Anyway</value>
  </data>
  <data name="Editkeyboard_Sourceheader" xml:space="preserve">
    <value>Key:</value>
  </data>
  <data name="Editkeyboard_Targetheader" xml:space="preserve">
    <value>Mapped To:</value>
  </data>
  <data name="Editshortcuts_Sourceheader" xml:space="preserve">
    <value>Shortcut:</value>
  </data>
  <data name="Editshortcuts_Targetheader" xml:space="preserve">
    <value>Mapped To:</value>
  </data>
  <data name="Editshortcuts_Targetappheader" xml:space="preserve">
    <value>Target App:</value>
  </data>
  <data name="Editkeyboard_Orphaneddialogtitle" xml:space="preserve">
    <value>The following keys are unassigned and you won't be able to use them:</value>
  </data>
  <data name="Editkeyboard_Partialconfirmationdialogtitle" xml:space="preserve">
    <value>Some of the keys could not be remapped. Do you want to continue anyway?</value>
  </data>
  <data name="Editshortcuts_Partialconfirmationdialogtitle" xml:space="preserve">
    <value>Some of the shortcuts could not be remapped. Do you want to continue anyway?</value>
  </data>
  <data name="Editkeyboard_Info" xml:space="preserve">
    <value>Select the key you want to change (Key) and then the key or shortcut you want it to become (Mapped To).</value>
  </data>
  <data name="Editkeyboard_Infoexample" xml:space="preserve">
    <value>For example, if you want to press A and get ""Ctrl+C"", key ""A"" would be your ""Key"" column and the shortcut ""Ctrl+C"" would be your ""Mapped To"" column.</value>
  </data>
  <data name="Editshortcuts_Info" xml:space="preserve">
    <value>Select the shortcut you want to change (Shortcut) and then the key or shortcut you want it to invoke (Mapped To).</value>
  </data>
  <data name="Editshortcuts_Infoexample" xml:space="preserve">
    <value>For example, if you want to press ""Ctrl+C"" and get ""Alt"" only on Microsoft Edge, ""Ctrl+C"" would be your ""Shortcut"" column, the key ""Alt"" would be your ""Mapped To"" column, and ""MSEdge"" would be your ""Target App"" column. If no target app is entered, it will apply globally. The name must be the process name and not the app name.</value>
  </data>
  <data name="Type_Button" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Typekey_Title" xml:space="preserve">
    <value>Press a key on selected keyboard:</value>
  </data>
  <data name="Typeshortcut_Title" xml:space="preserve">
    <value>Press the keys in shortcut:</value>
  </data>
  <data name="Typekey_Header" xml:space="preserve">
    <value>Key Pressed:</value>
  </data>
  <data name="Typeshortcut_Header" xml:space="preserve">
    <value>Keys Pressed:</value>
  </data>
  <data name="Type_Holdenter" xml:space="preserve">
    <value>Hold Enter to continue</value>
  </data>
  <data name="Type_Holdesc" xml:space="preserve">
    <value>Hold Esc to discard</value>
  </data>
  <data name="Editshortcuts_Allapps" xml:space="preserve">
    <value>All Apps</value>
  </data>
  <data name="Errormessage_Remapsuccessful" xml:space="preserve">
    <value>Remapping successful</value>
  </data>
  <data name="Errormessage_Remapunsuccessful" xml:space="preserve">
    <value>Some remappings were not applied</value>
  </data>
  <data name="Errormessage_Samekeypreviouslymapped" xml:space="preserve">
    <value>Cannot remap a key more than once</value>
  </data>
  <data name="Errormessage_Mappedtosamekey" xml:space="preserve">
    <value>Cannot remap a key to itself</value>
  </data>
  <data name="Errormessage_Conflictingmodifierkey" xml:space="preserve">
    <value>Cannot remap this key as it conflicts with another remapped key</value>
  </data>
  <data name="Errormessage_Sameshortcutpreviouslymapped" xml:space="preserve">
    <value>Cannot remap a shortcut more than once for the same target app</value>
  </data>
  <data name="Errormessage_Maptosameshortcut" xml:space="preserve">
    <value>Cannot remap a shortcut to itself</value>
  </data>
  <data name="Errormessage_Conflictingmodifiershortcut" xml:space="preserve">
    <value>Cannot remap this shortcut as it conflicts with another remapped shortcut</value>
  </data>
  <data name="Errormessage_Winl" xml:space="preserve">
    <value>Cannot remap from/to Win L</value>
  </data>
  <data name="Errormessage_Ctrlaltdel" xml:space="preserve">
    <value>Cannot remap from/to Ctrl Alt Del</value>
  </data>
  <data name="Errormessage_Savefailed" xml:space="preserve">
    <value>Failed to save the remappings</value>
  </data>
  <data name="Errormessage_Shortcutstartwithmodifier" xml:space="preserve">
    <value>Shortcut must start with a modifier key</value>
  </data>
  <data name="Errormessage_Shortcutnorepeatedmodifier" xml:space="preserve">
    <value>Shortcut cannot contain a repeated modifier</value>
  </data>
  <data name="Errormessage_Shortcutatleast2keys" xml:space="preserve">
    <value>Shortcut must have atleast 2 keys</value>
  </data>
  <data name="Errormessage_Shortcutoneactionkey" xml:space="preserve">
    <value>Shortcut must contain an action key</value>
  </data>
  <data name="Errormessage_Shortcutmaxoneactionkey" xml:space="preserve">
    <value>Shortcut cannot have more than one action key</value>
  </data>
  <data name="Errormessage_Maxshortcutsize" xml:space="preserve">
    <value>Shortcuts can only have up to 2 modifier keys</value>
  </data>
  <data name="Errormessage_Default" xml:space="preserve">
    <value>Unexpected error</value>
  </data>
</root>